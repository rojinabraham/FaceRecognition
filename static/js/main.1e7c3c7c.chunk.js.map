{"version":3,"sources":["components/navigation/Navigation.js","components/logo/Logo.js","components/imagelinkform/ImageLinkForm.js","components/rank/Rank.js","components/facerecognition/FaceRecognition.js","components/signin/SignIn.js","components/register/Register.js","App.js","serviceWorker.js","index.js","components/logo/FaceLogo11.png"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","className","onClick","Logo","options","max","height","width","paddingTop","src","FaceLogo","ImageLinkForm","onInputChange","onSubmit","type","onChange","Rank","FaceRecognition","imageURL","box","console","log","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","htmlFor","name","value","Register","app","Clarifai","App","apiKey","particlesOption","particles","number","density","enable","value_area","event","setState","input","target","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","route","this","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.1e7c3c7c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"tachyons\";\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n  if (isSignedIn) {\r\n    return (\r\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        <p\r\n          className=\"f3 link dim white  pa3 pointer\"\r\n          onClick={() => onRouteChange(\"signout\")}\r\n        >\r\n          Sign Out\r\n        </p>\r\n      </nav>\r\n    );\r\n  } else {\r\n    return (\r\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        <p\r\n          className=\"f3 link dim white  pa3 pointer\"\r\n          onClick={() => onRouteChange(\"signin\")}\r\n        >\r\n          Sign In\r\n        </p>\r\n        <p\r\n          className=\"f3 link dim white  pa3 pointer\"\r\n          onClick={() => onRouteChange(\"register\")}\r\n        >\r\n          Register\r\n        </p>\r\n      </nav>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport Tilt from \"react-tilt\";\r\nimport \"./Logo.css\";\r\nimport FaceLogo from \"./FaceLogo11.png\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"ma4 mt0 center\">\r\n      <Tilt\r\n        className=\"Tilt br2 shadow-2\"\r\n        options={{ max: 60 }}\r\n        style={{ height: 150, width: 150 }}\r\n      >\r\n        <div className=\"Tilt-inner\">\r\n          <img style={{ paddingTop: \"\" }} src={FaceLogo}></img>\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport \"./ImageLinkForm.css\";\r\n\r\nconst ImageLinkForm = ({ onInputChange, onSubmit }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"f3\">{\"This is will detect faces in your images\"}</p>\r\n      <div className=\"center\">\r\n        <div className=\"form center pa4 br3 shadow-5\">\r\n          <input\r\n            className=\"f4\r\n         pa2 w-70 center\"\r\n            type=\"tex\"\r\n            onChange={onInputChange}\r\n          />\r\n          <button\r\n            className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple\"\r\n            onClick={onSubmit}\r\n          >\r\n            Detect\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageLinkForm;\r\n","import React from \"react\";\r\nimport \"tachyons\";\r\n\r\nconst Rank = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"white f3\">{\"Rojin, your current Rank is ...\"}</div>\r\n      <div className=\"white f1\">{\"#5\"}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rank;\r\n","import React from \"react\";\r\nimport \"./FaceRecognition.css\";\r\n\r\nconst FaceRecognition = ({ imageURL, box }) => {\r\n  console.log(box);\r\n  return (\r\n    <div className=\"center ma\">\r\n      <div className=\"absolute mt2\">\r\n        <img id=\"face\" src={imageURL} width=\"500px\" height=\"auto\" />\r\n        <div\r\n          className=\"bounding-box\"\r\n          style={{\r\n            top: box.topRow,\r\n            right: box.rightCol,\r\n            bottom: box.bottomRow,\r\n            left: box.leftCol,\r\n          }}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default FaceRecognition;\r\n","import React from \"react\";\r\n\r\nconst SignIn = ({ onRouteChange }) => {\r\n  return (\r\n    <article className=\"br3 ba b--black-40 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center\">\r\n      <main className=\"pa4 black-80\">\r\n        <div className=\"measure\">\r\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n            <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n            <div className=\"mt3\">\r\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                Email\r\n              </label>\r\n              <input\r\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                type=\"email\"\r\n                name=\"email-address\"\r\n                id=\"email-address\"\r\n              />\r\n            </div>\r\n            <div className=\"mv3\">\r\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                Password\r\n              </label>\r\n              <input\r\n                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n              />\r\n            </div>\r\n          </fieldset>\r\n          <div className=\"\">\r\n            <input\r\n              className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n              type=\"submit\"\r\n              value=\"Sign in\"\r\n              onClick={() => onRouteChange(\"home\")}\r\n            />\r\n          </div>\r\n          <div className=\"lh-copy mt3\">\r\n            <p\r\n              onClick={() => onRouteChange(\"register\")}\r\n              className=\"f6 link dim black db pointer\"\r\n            >\r\n              Register\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </article>\r\n  );\r\n};\r\nexport default SignIn;\r\n","import React from \"react\";\r\n\r\nconst Register = ({ onRouteChange }) => {\r\n  return (\r\n    <article className=\"br3 ba b--black-40 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center\">\r\n      <main className=\"pa4 black-80\">\r\n        <div className=\"measure\">\r\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n            <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\r\n            <div className=\"mt3\">\r\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                Name\r\n              </label>\r\n              <input\r\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n              />\r\n            </div>\r\n            <div className=\"mt3\">\r\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                Email\r\n              </label>\r\n              <input\r\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                type=\"email\"\r\n                name=\"email-address\"\r\n                id=\"email-address\"\r\n              />\r\n            </div>\r\n            <div className=\"mv3\">\r\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                Password\r\n              </label>\r\n              <input\r\n                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n              />\r\n            </div>\r\n          </fieldset>\r\n          <div className=\"\">\r\n            <input\r\n              className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib pointer\"\r\n              type=\"submit\"\r\n              value=\"Register\"\r\n              onClick={() => onRouteChange(\"home\")}\r\n            />\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </article>\r\n  );\r\n};\r\nexport default Register;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"tachyons\";\nimport Navigation from \"./components/navigation/Navigation\";\nimport Logo from \"./components/logo/Logo\";\nimport ImageLinkForm from \"./components/imagelinkform/ImageLinkForm\";\nimport Rank from \"./components/rank/Rank\";\nimport Clarifai from \"clarifai\";\nimport Particles from \"react-particles-js\";\nimport FaceRecognition from \"./components/facerecognition/FaceRecognition\";\nimport SignIn from \"./components/signin/SignIn\";\nimport Register from \"./components/register/Register\";\n\nconst app = new Clarifai.App({\n  apiKey: \"9caa6011640049f2bf2bf6810d778588\",\n});\nconst particlesOption = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 400,\n      },\n    },\n  },\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageURL: \"\",\n      box: {},\n      route: \"signin\",\n      isSignedIn: false,\n    };\n  }\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n  calculateFaceLocation = (data) => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    console.log(clarifaiFace);\n    const image = document.getElementById(\"face\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n  displayFaceBox = (box) => {\n    this.setState({ box: box });\n    console.log(box);\n  };\n  onSubmit = () => {\n    this.setState({ imageURL: this.state.input });\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then((response) => {\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      })\n      .catch((err) => console.log(err));\n  };\n  onRouteChange = (route) => {\n    if (route === \"signout\") {\n      this.setState({ isSignedIn: false });\n    } else if (route === \"home\") {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: route });\n  };\n  render() {\n    const { isSignedIn, imageURL, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOption} />\n        <Navigation\n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange}\n        />\n        {route === \"home\" ? (\n          <div>\n            <Logo />\n            <Rank />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onSubmit={this.onSubmit}\n            />\n            <FaceRecognition box={box} imageURL={imageURL} />\n          </div>\n        ) : route === \"signin\" ? (\n          <SignIn onRouteChange={this.onRouteChange} />\n        ) : (\n          <Register onRouteChange={this.onRouteChange} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/FaceLogo11.c32baf04.png\";"],"sourceRoot":""}